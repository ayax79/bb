<!--
  ~ Copyright (c) 2009. Blackbox, LLC
  ~ All rights reserved.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.blackbox</groupId>
    <artifactId>server</artifactId>
    <packaging>war</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <name>server</name>
    <scm>
        <connection>scm:git:git@github.com:ayax79/server.git</connection>
        <url>https://github.com/ayax79/server/tree/master</url>
    </scm>
    <developers>
        <developer>
            <name>Artie Copeland</name>
            <email>artie@blackboxrepublic.com</email>
            <roles>
                <role>Sr. Engineer</role>
            </roles>
        </developer>
        <developer>
            <name>A.J. Wright</name>
            <email>aj@blackboxrepublic.com</email>
            <roles>
                <role>Sr. Engineer</role>
            </roles>
        </developer>
    </developers>
    <properties>
        <!--<server.context>server</server.context>-->
        <server.context></server.context>
        <presentation.port>8080</presentation.port>
        <server.port>8081</server.port>
        <service.port>8082</service.port>
        <!--<server.download.url>http://localhost:8081/server/download</server.download.url>-->
        <server.download.url>http://localhost:8081/download</server.download.url>
        <jetty.scanIntervalSeconds>30000</jetty.scanIntervalSeconds>
        <sonar.dynamicAnalysis>false</sonar.dynamicAnalysis>
        <jdbc.host>localhost</jdbc.host>
        <jdbc.groupId>postgresql</jdbc.groupId>
        <jdbc.artifactId>postgresql</jdbc.artifactId>
        <jdbc.version>8.3-603.jdbc4</jdbc.version>
        <jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
        <jdbc.username>blackbox</jdbc.username>
        <jdbc.password>blackbox</jdbc.password>
        <jdbc.url>jdbc:postgresql://${jdbc.host}/blackbox</jdbc.url>
        <compass.index.dir>c:/git/bbox/server/target/lucene</compass.index.dir>
        <hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
        <hibernate.show.sql>true</hibernate.show.sql>
        <hibernate.format.sql>true</hibernate.format.sql>
        <hibernate.use_second_level_cache.cache>true</hibernate.use_second_level_cache.cache>
        <hibernate.use_query_cache.cache>true</hibernate.use_query_cache.cache>
        <!--<hibernate.cache.provider>org.terracotta.modules.hibernatecache.TerracottaHibernateCacheProvider-->
        <!--</hibernate.cache.provider>-->
        <hibernate.cache.provider>org.hibernate.cache.HashtableCacheProvider</hibernate.cache.provider>
        <hibernate.index.dir>file://${basedir}/target/lucene</hibernate.index.dir>
        <hibernate.directory.provider>org.hibernate.search.store.FSDirectoryProvider</hibernate.directory.provider>
        <file.store.location>/tmp</file.store.location>
        <notify.queue>email.notify.queue</notify.queue>
        <image.multimedia.content.publish.queue>image.multimedia.content.publish.queue
        </image.multimedia.content.publish.queue>
        <video.multimedia.content.publish.queue>video.multimedia.content.publish.queue
        </video.multimedia.content.publish.queue>
        <audio.multimedia.content.publish.queue>audio.multimedia.content.publish.queue
        </audio.multimedia.content.publish.queue>
        <image.multimedia.message.publish.queue>image.multimedia.message.publish.queue
        </image.multimedia.message.publish.queue>
        <video.multimedia.message.publish.queue>video.multimedia.message.publish.queue
        </video.multimedia.message.publish.queue>
        <audio.multimedia.message.publish.queue>audio.multimedia.message.publish.queue
        </audio.multimedia.message.publish.queue>
        <text.message.publish.queue>text.message.publish.queue</text.message.publish.queue>
        <publish.tmp.directory>${file.store.location}/store</publish.tmp.directory>
        <publish.download.tmp.directory>${file.store.location}/localsave</publish.download.tmp.directory>
        <jms.content.publish.audio.download.url>${server.download.url}/?file=
        </jms.content.publish.audio.download.url>
        <jms.content.publish.video.download.url>${server.download.url}/?file=
        </jms.content.publish.video.download.url>
        <jms.content.publish.image.download.url>${server.download.url}/?file=
        </jms.content.publish.image.download.url>
        <jms.message.publish.audio.download.url>${server.download.url}/?file=
        </jms.message.publish.audio.download.url>
        <jms.message.publish.video.download.url>${server.download.url}/?file=
        </jms.message.publish.video.download.url>
        <jms.message.publish.image.download.url>${server.download.url}/?file=
        </jms.message.publish.image.download.url>
        <email.host>smtp.gmail.com</email.host>
        <email.host.ssl>true</email.host.ssl>
        <email.host.tls>true</email.host.tls>
        <email.authentication.username>yesnotify@gmail.com</email.authentication.username>
        <email.authentication.password>YxIwwxAsb7wY2zl</email.authentication.password>
        <registration.email.subject>Welcome to Blackbox</registration.email.subject>
        <registration.sender.displayName>Blackbox Registration</registration.sender.displayName>
        <registration.sender.emailAddress>do.not.reply@blackbox.com</registration.sender.emailAddress>
        <registration.sender.replyAddress>do.not.reply@blackbox.com</registration.sender.replyAddress>
        <registration.email.template>/velocity/registration.vm</registration.email.template>
        <forgotPassword.email.template>/velocity/forgotPassword.vm</forgotPassword.email.template>
        <presentation.url>http://localhost:8080</presentation.url>
        <content.publish.subject>Media from Blackbox</content.publish.subject>
        <content.publish.sender.displayName>Blackbox Media Publishing</content.publish.sender.displayName>
        <content.publish.sender.emailAddress>do.not.reply@blackbox.com</content.publish.sender.emailAddress>
        <content.publish.sender.replyAddress>do.not.reply@blackbox.com</content.publish.sender.replyAddress>
        <binary.content.publish.email.template>/velocity/binary-content-publish.vm
        </binary.content.publish.email.template>
        <message.publish.subject>Message from Blackbox</message.publish.subject>
        <message.publish.sender.displayName>Blackbox Message Publishing</message.publish.sender.displayName>
        <message.publish.sender.emailAddress>do.not.reply@blackbox.com</message.publish.sender.emailAddress>
        <message.publish.sender.replyAddress>do.not.reply@blackbox.com</message.publish.sender.replyAddress>
        <ascii.message.publish.email.template>/velocity/ascii-message-publish.vm</ascii.message.publish.email.template>
        <!-- begin dependency versions -->
        <slf4j.version>1.5.8</slf4j.version>
        <spring.version>2.5.6.SEC01</spring.version>
        <hibernate-commons-annotations.version>3.3.0.ga</hibernate-commons-annotations.version>
        <hibernate-annotations.version>3.4.0.GA</hibernate-annotations.version>
        <hibernate-entitymanager.version>3.4.0.GA</hibernate-entitymanager.version>
        <hibernate-validator.version>3.1.0.GA</hibernate-validator.version>
        <hibernate.version>3.3.1.GA</hibernate.version>
        <hibernate-search.version>3.1.1.GA</hibernate-search.version>
        <pojoizer.version>1.0.3</pojoizer.version>
        <tc-maven.version>1.3.1</tc-maven.version>
        <tim-jetty-6.1.version>2.0.0</tim-jetty-6.1.version>
        <tim.pipes.version>2.1.1</tim.pipes.version>
        <tim-annotations.version>1.4.0</tim-annotations.version>
        <simulated-api.version>1.1.0</simulated-api.version>
        <tim-concurrent-collections.version>1.2.0</tim-concurrent-collections.version>
        <tim-map-evictor.version>1.2.0</tim-map-evictor.version>
        <tim-hibernate-stats.version>1.0.0</tim-hibernate-stats.version>
        <tim-hibernate-3.3.version>1.4.0</tim-hibernate-3.3.version>
        <tim-hibernate-cache-3.3.version>1.0.0</tim-hibernate-cache-3.3.version>
        <tim-hibernate-3.3-concurrency.version>1.0.0</tim-hibernate-3.3-concurrency.version>
        <tim-hibernate-cache-3.2.version>1.0.0</tim-hibernate-cache-3.2.version>
        <tim-hibernate-concurrency-common.version>1.0.0</tim-hibernate-concurrency-common.version>
        <tim-async-processing.version>1.2.0</tim-async-processing.version>
        <camel.version>1.6.1</camel.version>
        <aspectj.version>1.6.2</aspectj.version>
        <resteasy.version>1.1.GA</resteasy.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>quartz</artifactId>
            <version>1.6.1</version>
        </dependency>
        <dependency>
            <groupId>fastutil</groupId>
            <artifactId>fastutil</artifactId>
            <version>5.0.9</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-spring</artifactId>
            <version>${resteasy.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${resteasy.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxb-provider</artifactId>
            <version>${resteasy.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
            <version>${resteasy.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- begin terracotta-->
        <dependency>
            <artifactId>pojoizer</artifactId>
            <version>${pojoizer.version}</version>
            <groupId>org.terracotta.modules</groupId>
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-async-processing</artifactId>
            <version>${tim-async-processing.version}</version>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-pipes</artifactId>
            <version>${tim.pipes.version}</version>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-annotations</artifactId>
            <version>${tim-annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-map-evictor</artifactId>
            <version>${tim-map-evictor.version}</version>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-concurrent-collections</artifactId>
            <version>${tim-concurrent-collections.version}</version>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>simulated-api</artifactId>
            <version>${simulated-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-hibernate-stats</artifactId>
            <version>${tim-hibernate-stats.version}</version>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-hibernate-3.3-concurrency</artifactId>
            <version>${tim-hibernate-3.3-concurrency.version}</version>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-hibernate-cache-3.3</artifactId>
            <version>${tim-hibernate-cache-3.3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-hibernate-cache-3.2</artifactId>
            <version>${tim-hibernate-cache-3.2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-hibernate-concurrency-common</artifactId>
            <version>${tim-hibernate-concurrency-common.version}</version>
        </dependency>

        <!-- provided dependencies -->
        <dependency>
            <groupId>org.terracotta.modules.beta</groupId>
            <artifactId>tim-jetty-6.1</artifactId>
            <version>${tim-jetty-6.1.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <artifactId>tim-hibernate-3.3</artifactId>
            <groupId>org.terracotta.modules.beta</groupId>
            <version>${tim-hibernate-3.3.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- end terracotta-->
        <!-- begin hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate-entitymanager.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>${hibernate-annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>${hibernate-commons-annotations.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search</artifactId>
            <version>${hibernate-search.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-commons-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- end hibernate -->
        <!-- begin spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- end spring -->
        <dependency>
            <groupId>com.blackbox</groupId>
            <artifactId>core</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.yestech</groupId>
            <artifactId>yesevent</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.yestech</groupId>
            <artifactId>yeslib</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>${jdbc.groupId}</groupId>
            <artifactId>${jdbc.artifactId}</artifactId>
            <version>${jdbc.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock</artifactId>
            <version>2.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-junit4</artifactId>
            <version>2.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jsecurity</groupId>
            <artifactId>jsecurity</artifactId>
            <version>0.9.0-bb</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.7.0</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.slf4j</groupId>-->
        <!--<artifactId>slf4j-simple</artifactId>-->
        <!--<version>${slf4j.version}</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.slf4j</groupId>-->
        <!--<artifactId>slf4j-log4j12</artifactId>-->
        <!--<version>${slf4j.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.slf4j</groupId>-->
        <!--<artifactId>slf4j-jcl</artifactId>-->
        <!--<version>${slf4j.version}</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>org.yestech</groupId>
            <artifactId>yesnotify</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.yestech</groupId>
            <artifactId>yescache</artifactId>
            <version>1.0.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.terracotta.modules</groupId>
                    <artifactId>tim-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.terracotta</groupId>
                    <artifactId>terracotta</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.terracotta.modules</groupId>
                    <artifactId>tim-terracotta-cache</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.sf.ehcache</groupId>
                    <artifactId>ehcache</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.terracotta.modules</groupId>
                    <artifactId>tim-map-evictor</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.yestech</groupId>
            <artifactId>yespublish</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time-hibernate</artifactId>
            <version>1.1</version>
            <exclusions>
                <exclusion>
                    <groupId>cglib</groupId>
                    <artifactId>cglib-full</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>ehcache</groupId>
                    <artifactId>ehcache</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.ostermiller</groupId>
            <artifactId>utils</artifactId>
            <version>1.07.00</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xbean</groupId>
            <artifactId>xbean-spring</artifactId>
            <version>3.4.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjlib</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.compass-project</groupId>
            <artifactId>compass</artifactId>
            <version>2.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jms</artifactId>
            <version>${camel.version}</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <!-- The ordinary spring config files should be ignored for filtering, however apparently
            the camel ones have to be processed -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/spring/*xml</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/spring/*xml</include>
                </includes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <target>1.6</target>
                        <source>1.6</source>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*UnitTest.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <inherited>true</inherited>
                        <id>run-integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*IntegrationTest.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*UnitTest.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.terracotta.maven.plugins</groupId>
                <artifactId>tc-maven-plugin</artifactId>
                <version>1.3.0</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>1.0-beta-1</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.3-SNAPSHOT</version>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>jetty</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>maven-jetty-plugin</artifactId>
                        <version>6.1.16</version>
                        <configuration>
                            <connectors>
                                <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                                    <port>${server.port}</port>
                                </connector>
                            </connectors>
                            <contextPath>/${server.context}</contextPath>
                            <scanIntervalSeconds>${jetty.scanIntervalSeconds}</scanIntervalSeconds>
                            <scanTargetPatterns>
                                <scanTargetPattern>
                                    <directory>src/main/webapp/WEB-INF</directory>
                                    <excludes>
                                        <exclude>**/*.jsp</exclude>
                                    </excludes>
                                    <includes>
                                        <include>**/*.properties</include>
                                        <include>**/*.xml</include>
                                    </includes>
                                </scanTargetPattern>
                            </scanTargetPatterns>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>default-dataset</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>hibernate3-maven-plugin</artifactId>
                        <version>2.2</version>
                        <configuration>
                            <components>
                                <component>
                                    <name>hbm2ddl</name>
                                    <implementation>annotationconfiguration</implementation>
                                </component>
                            </components>
                            <componentProperties>
                                <drop>true</drop>
                                <jdk5>true</jdk5>
                                <propertyfile>target/classes/jdbc.properties</propertyfile>
                                <configurationfile>src/test/resources/hibernate.cfg.xml</configurationfile>
                                <skip>${maven.test.skip}</skip>
                                <scan-classes>true</scan-classes>
                                <outputfilename>blackbox.sql</outputfilename>
                            </componentProperties>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>hbm2ddl</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>${jdbc.groupId}</groupId>
                                <artifactId>${jdbc.artifactId}</artifactId>
                                <version>${jdbc.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.groovy.maven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <version>1.0</version>
                        <configuration>
                            <source>${pom.basedir}/src/test/resources/sampledata.groovy</source>
                        </configuration>
                        <executions>
                            <execution>
                                <id>populate-db</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>${jdbc.groupId}</groupId>
                                <artifactId>${jdbc.artifactId}</artifactId>
                                <version>${jdbc.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.yestech.maven</groupId>
                        <artifactId>maven-hibernate-search</artifactId>
                        <version>1.0.0-SNAPSHOT</version>
                        <configuration>
                            <url>${jdbc.url}</url>
                            <driver>${jdbc.driverClassName}</driver>
                            <username>${jdbc.username}</username>
                            <password>${jdbc.password}</password>
                            <config>${basedir}/target/classes/hibernate.cfg.xml</config>
                            <indexDir>${basedir}/target/lucene</indexDir>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>index</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>${jdbc.groupId}</groupId>
                                <artifactId>${jdbc.artifactId}</artifactId>
                                <version>${jdbc.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>rebel</id>
            <!-- If using java rebel, you should disable the jetty profile -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.zeroturnaround</groupId>
                        <artifactId>javarebel-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-rebel-xml</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>maven-jetty-plugin</artifactId>
                        <version>6.1.16</version>
                        <configuration>
                            <connectors>
                                <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                                    <port>${server.port}</port>
                                </connector>
                            </connectors>
                            <contextPath>/${server.context}</contextPath>
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <pluginRepositories>
                <pluginRepository>
                    <id>zt-repo</id>
                    <name>Zero turnaround repo</name>
                    <url>http://repos.zeroturnaround.com/maven2</url>
                </pluginRepository>
            </pluginRepositories>
        </profile>
        <profile>
            <id>ci</id>
            <properties>
                <server.context></server.context>
                <dev.server>app1dev</dev.server>
                <dev.username>ci</dev.username>
                <dev.password>bbc1us3r1939</dev.password>
                <server.host>http://${dev.server}:${server.port}/</server.host>
                <my.host>http://${dev.server}:${server.port}/</my.host>
                <presentation.port>8080</presentation.port>
                <server.port>8081</server.port>
                <service.port>8082</service.port>
                <server.download.url>http://localhost:8081/download</server.download.url>
                <!--<server.download.url>http://localhost:8081/server/download</server.download.url>-->
                <jetty.scanIntervalSeconds>3</jetty.scanIntervalSeconds>
                <sonar.dynamicAnalysis>false</sonar.dynamicAnalysis>
                <jdbc.host>dbdev</jdbc.host>
                <jdbc.groupId>postgresql</jdbc.groupId>
                <jdbc.artifactId>postgresql</jdbc.artifactId>
                <jdbc.version>8.3-603.jdbc4</jdbc.version>
                <jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
                <jdbc.username>blackbox</jdbc.username>
                <jdbc.password>blackbox</jdbc.password>
                <jdbc.url>jdbc:postgresql://${jdbc.host}/blackbox</jdbc.url>
                <compass.index.dir>file:///cache/lucene</compass.index.dir>
                <hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
                <hibernate.show.sql>true</hibernate.show.sql>
                <hibernate.format.sql>true</hibernate.format.sql>
                <hibernate.use_second_level_cache.cache>true</hibernate.use_second_level_cache.cache>
                <hibernate.use_query_cache.cache>true</hibernate.use_query_cache.cache>
                <!--<hibernate.cache.provider>org.terracotta.modules.hibernatecache.TerracottaHibernateCacheProvider-->
                <!--</hibernate.cache.provider>-->
                <hibernate.cache.provider>org.hibernate.cache.HashtableCacheProvider</hibernate.cache.provider>
                <hibernate.directory.provider>org.hibernate.search.store.FSDirectoryProvider
                </hibernate.directory.provider>
                <hibernate.index.dir>/cache/lucene</hibernate.index.dir>
                <dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory
                </dbunit.dataTypeFactoryName>
                <dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
                <!--
                <dbunit.operation.type>INSERT</dbunit.operation.type>
                -->
                <file.store.location>/tmp</file.store.location>
                <notify.queue>email.notify.queue</notify.queue>
                <image.multimedia.content.publish.queue>image.multimedia.content.publish.queue
                </image.multimedia.content.publish.queue>
                <video.multimedia.content.publish.queue>video.multimedia.content.publish.queue
                </video.multimedia.content.publish.queue>
                <audio.multimedia.content.publish.queue>audio.multimedia.content.publish.queue
                </audio.multimedia.content.publish.queue>
                <image.multimedia.message.publish.queue>image.multimedia.message.publish.queue
                </image.multimedia.message.publish.queue>
                <video.multimedia.message.publish.queue>video.multimedia.message.publish.queue
                </video.multimedia.message.publish.queue>
                <audio.multimedia.message.publish.queue>audio.multimedia.message.publish.queue
                </audio.multimedia.message.publish.queue>
                <text.message.publish.queue>text.message.publish.queue</text.message.publish.queue>
                <publish.tmp.directory>${file.store.location}/store</publish.tmp.directory>
                <publish.download.tmp.directory>${file.store.location}/localsave</publish.download.tmp.directory>
                <jms.content.publish.audio.download.url>${server.download.url}/?file=
                </jms.content.publish.audio.download.url>
                <jms.content.publish.video.download.url>${server.download.url}/?file=
                </jms.content.publish.video.download.url>
                <jms.content.publish.image.download.url>${server.download.url}/?file=
                </jms.content.publish.image.download.url>
                <jms.message.publish.audio.download.url>${server.download.url}/?file=
                </jms.message.publish.audio.download.url>
                <jms.message.publish.video.download.url>${server.download.url}/?file=
                </jms.message.publish.video.download.url>
                <jms.message.publish.image.download.url>${server.download.url}/?file=
                </jms.message.publish.image.download.url>
                <email.host>smtp.gmail.com</email.host>
                <email.host.ssl>true</email.host.ssl>
                <email.host.tls>true</email.host.tls>
                <email.authentication.username>yesnotify@gmail.com</email.authentication.username>
                <email.authentication.password>YxIwwxAsb7wY2zl</email.authentication.password>
                <registration.email.subject>Welcome to Blackbox</registration.email.subject>
                <registration.sender.displayName>Blackbox Registration</registration.sender.displayName>
                <registration.sender.emailAddress>do.not.reply@blackbox.com</registration.sender.emailAddress>
                <registration.sender.replyAddress>do.not.reply@blackbox.com</registration.sender.replyAddress>
                <registration.email.template>/velocity/registration.vm</registration.email.template>
                <presentation.url>http://localhost:8080</presentation.url>
                <content.publish.subject>Media from Blackbox</content.publish.subject>
                <content.publish.sender.displayName>Blackbox Media Publishing</content.publish.sender.displayName>
                <content.publish.sender.emailAddress>do.not.reply@blackbox.com</content.publish.sender.emailAddress>
                <content.publish.sender.replyAddress>do.not.reply@blackbox.com</content.publish.sender.replyAddress>
                <binary.content.publish.email.template>/velocity/binary-content-publish.vm
                </binary.content.publish.email.template>
                <message.publish.subject>Message from Blackbox</message.publish.subject>
                <message.publish.sender.displayName>Blackbox Message Publishing</message.publish.sender.displayName>
                <message.publish.sender.emailAddress>do.not.reply@blackbox.com</message.publish.sender.emailAddress>
                <message.publish.sender.replyAddress>do.not.reply@blackbox.com</message.publish.sender.replyAddress>
                <ascii.message.publish.email.template>/velocity/ascii-message-publish.vm
                </ascii.message.publish.email.template>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.0.1-SNAPSHOT</version>
                        <configuration>
                            <container>
                                <containerId>jetty6x</containerId>
                                <type>remote</type>
                            </container>
                            <configuration>
                                <type>runtime</type>
                                <properties>
                                    <cargo.servlet.port>${server.port}</cargo.servlet.port>
                                    <cargo.hostname>${dev.server}</cargo.hostname>
                                    <cargo.remote.username>${dev.username}</cargo.remote.username>
                                    <cargo.remote.password>${dev.password}</cargo.remote.password>
                                </properties>
                            </configuration>
                            <deployer>
                                <type>remote</type>
                                <deployables>
                                    <deployable>
                                        <properties>
                                            <context>/${server.context}</context>
                                        </properties>
                                        <!--<pingURL>${my.host}/ping</pingURL>-->
                                        <!--<pingTimeout>20000</pingTimeout>-->
                                    </deployable>
                                </deployables>
                            </deployer>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ci-deploy</id>
            <properties>
                <deploy.server.context>server</deploy.server.context>
                <dev.server>app1dev</dev.server>
                <dev.username>ci</dev.username>
                <dev.password>bbc1us3r1939</dev.password>
                <server.context></server.context>
                <server.host>http://${dev.server}:${server.port}/</server.host>
                <my.host>http://${dev.server}:${server.port}/</my.host>
                <presentation.port>8080</presentation.port>
                <server.port>8081</server.port>
                <service.port>8082</service.port>
                <server.download.url>http://localhost:8081/download</server.download.url>
                <!--<server.download.url>http://localhost:8081/server/download</server.download.url>-->
                <jetty.scanIntervalSeconds>3</jetty.scanIntervalSeconds>
                <sonar.dynamicAnalysis>false</sonar.dynamicAnalysis>
                <jdbc.host>dbdev</jdbc.host>
                <jdbc.groupId>postgresql</jdbc.groupId>
                <jdbc.artifactId>postgresql</jdbc.artifactId>
                <jdbc.version>8.3-603.jdbc4</jdbc.version>
                <jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
                <jdbc.username>blackbox</jdbc.username>
                <jdbc.password>blackbox</jdbc.password>
                <jdbc.url>jdbc:postgresql://${jdbc.host}/blackbox_dev</jdbc.url>
                <compass.index.dir>/cache/lucene</compass.index.dir>
                <hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
                <hibernate.show.sql>true</hibernate.show.sql>
                <hibernate.format.sql>true</hibernate.format.sql>
                <hibernate.use_second_level_cache.cache>true</hibernate.use_second_level_cache.cache>
                <hibernate.use_query_cache.cache>true</hibernate.use_query_cache.cache>
                <!--<hibernate.cache.provider>org.terracotta.modules.hibernatecache.TerracottaHibernateCacheProvider-->
                <!--</hibernate.cache.provider>-->
                <hibernate.cache.provider>org.hibernate.cache.HashtableCacheProvider</hibernate.cache.provider>
                <hibernate.index.dir>/cache/lucene</hibernate.index.dir>
                <hibernate.directory.provider>org.hibernate.search.store.FSDirectoryProvider
                </hibernate.directory.provider>
                <dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory
                </dbunit.dataTypeFactoryName>
                <dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
                <!--
                <dbunit.operation.type>INSERT</dbunit.operation.type>
                -->
                <file.store.location>/tmp</file.store.location>
                <notify.queue>email.notify.queue</notify.queue>
                <image.multimedia.content.publish.queue>image.multimedia.content.publish.queue
                </image.multimedia.content.publish.queue>
                <video.multimedia.content.publish.queue>video.multimedia.content.publish.queue
                </video.multimedia.content.publish.queue>
                <audio.multimedia.content.publish.queue>audio.multimedia.content.publish.queue
                </audio.multimedia.content.publish.queue>
                <image.multimedia.message.publish.queue>image.multimedia.message.publish.queue
                </image.multimedia.message.publish.queue>
                <video.multimedia.message.publish.queue>video.multimedia.message.publish.queue
                </video.multimedia.message.publish.queue>
                <audio.multimedia.message.publish.queue>audio.multimedia.message.publish.queue
                </audio.multimedia.message.publish.queue>
                <text.message.publish.queue>text.message.publish.queue</text.message.publish.queue>
                <publish.tmp.directory>${file.store.location}/store</publish.tmp.directory>
                <publish.download.tmp.directory>${file.store.location}/localsave</publish.download.tmp.directory>
                <jms.content.publish.audio.download.url>${server.download.url}/?file=
                </jms.content.publish.audio.download.url>
                <jms.content.publish.video.download.url>${server.download.url}/?file=
                </jms.content.publish.video.download.url>
                <jms.content.publish.image.download.url>${server.download.url}/?file=
                </jms.content.publish.image.download.url>
                <jms.message.publish.audio.download.url>${server.download.url}/?file=
                </jms.message.publish.audio.download.url>
                <jms.message.publish.video.download.url>${server.download.url}/?file=
                </jms.message.publish.video.download.url>
                <jms.message.publish.image.download.url>${server.download.url}/?file=
                </jms.message.publish.image.download.url>
                <email.host>smtp.gmail.com</email.host>
                <email.host.ssl>true</email.host.ssl>
                <email.host.tls>true</email.host.tls>
                <email.authentication.username>yesnotify@gmail.com</email.authentication.username>
                <email.authentication.password>YxIwwxAsb7wY2zl</email.authentication.password>
                <registration.email.subject>Welcome to Blackbox</registration.email.subject>
                <registration.sender.displayName>Blackbox Registration</registration.sender.displayName>
                <registration.sender.emailAddress>do.not.reply@blackbox.com</registration.sender.emailAddress>
                <registration.sender.replyAddress>do.not.reply@blackbox.com</registration.sender.replyAddress>
                <registration.email.template>/velocity/registration.vm</registration.email.template>
                <presentation.url>http://localhost:8080</presentation.url>
                <content.publish.subject>Media from Blackbox</content.publish.subject>
                <content.publish.sender.displayName>Blackbox Media Publishing</content.publish.sender.displayName>
                <content.publish.sender.emailAddress>do.not.reply@blackbox.com</content.publish.sender.emailAddress>
                <content.publish.sender.replyAddress>do.not.reply@blackbox.com</content.publish.sender.replyAddress>
                <binary.content.publish.email.template>/velocity/binary-content-publish.vm
                </binary.content.publish.email.template>
                <message.publish.subject>Message from Blackbox</message.publish.subject>
                <message.publish.sender.displayName>Blackbox Message Publishing</message.publish.sender.displayName>
                <message.publish.sender.emailAddress>do.not.reply@blackbox.com</message.publish.sender.emailAddress>
                <message.publish.sender.replyAddress>do.not.reply@blackbox.com</message.publish.sender.replyAddress>
                <ascii.message.publish.email.template>/velocity/ascii-message-publish.vm
                </ascii.message.publish.email.template>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.0.1-SNAPSHOT</version>
                        <configuration>
                            <container>
                                <containerId>jetty6x</containerId>
                                <type>remote</type>
                            </container>
                            <configuration>
                                <type>runtime</type>
                                <properties>
                                    <cargo.servlet.port>${server.port}</cargo.servlet.port>
                                    <cargo.hostname>${dev.server}</cargo.hostname>
                                    <cargo.remote.username>${dev.username}</cargo.remote.username>
                                    <cargo.remote.password>${dev.password}</cargo.remote.password>
                                </properties>
                            </configuration>
                            <deployer>
                                <type>remote</type>
                                <deployables>
                                    <deployable>
                                        <properties>
                                            <context>/${deploy.server.context}</context>
                                        </properties>
                                    </deployable>
                                </deployables>
                            </deployer>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.1</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <targetJdk>1.6</targetJdk>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <repositories>
        <repository>
            <id>jboss</id>
            <url>http://repository.jboss.com/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-snapshot</id>
            <url>http://snapshots.jboss.org/maven2</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>caucho</id>
            <url>http://caucho.com/m2/</url>
        </repository>
        <repository>
            <id>yes-thirdparty</id>
            <url>http://repo.yestech.org/content/repositories/thirdparty/</url>
        </repository>
        <repository>
            <id>yes-snapshots</id>
            <url>http://repo.yestech.org/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>yes-release</id>
            <url>http://repo.yestech.org/content/repositories/release/</url>
        </repository>
        <repository>
            <id>blackbox.thirdparty</id>
            <url>http://blackbox.yestech.org/content/repositories/thirdparty</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>blackbox.release</id>
            <name>Blackbox release repository</name>
            <url>http://blackbox.yestech.org/content/repositories/releases/</url>
        </repository>
        <repository>
            <id>blackbox.snapshots</id>
            <name>Blackbox snapshots repository</name>
            <url>http://blackbox.yestech.org/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>terracotta</id>
            <url>http://repo.terracotta.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>terracotta-repository</id>
            <url>http://www.terracotta.org/download/reflector/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>compass-project.org</id>
            <name>Compass</name>
            <url>http://repo.compass-project.org</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>jboss-plugins</id>
            <url>http://repository.jboss.com/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>codehaus</id>
            <url>http://repository.codehaus.org</url>
        </pluginRepository>
        <pluginRepository>
            <id>terracotta-repository</id>
            <url>http://www.terracotta.org/download/reflector/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>yes.release</id>
            <url>http://repo.yestech.org/content/repositories/releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>yes.snapshots</id>
            <url>http://repo.yestech.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>codehaus snapshot repository</id>
            <url>http://snapshots.repository.codehaus.org/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>
    <distributionManagement>
        <repository>
            <id>blackbox.release</id>
            <name>Blackbox release repository</name>
            <url>http://blackbox.yestech.org/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>blackbox.snapshots</id>
            <name>Blackbox snapshots repository</name>
            <url>http://blackbox.yestech.org/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>
