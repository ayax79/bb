<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring-2.0.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <camel:camelContext id="textMessagePublishContext" >
        <camel:route>
            <camel:from
                    uri="textMessagePublishBus:textMessagePublishBus?topologyName=text.message.publish.queue&amp;pipeName=text.message.publish.queue"/>
            <camel:pipeline>
                <camel:to uri="bean:camelConsumerTextMessagePublish?method=process"/>
                <camel:multicast parallelProcessing="true">
                    <camel:to uri="bean:textMessageMemberNotification?method=notify"/>
                    <camel:to uri="bean:messagePersistSenderMessageToDatabase?method=save"/>
                    <camel:to uri="bean:persistActivityToDatabase?method=save"/>
                    <camel:to uri="bean:publishMessageToTwitter" />
                    <!--<camel:to uri="bean:messagePersistSenderLastActivityMessage?method=save"/>-->
                    <!--<camel:to uri="bean:messagePersistSenderMessageToActivityStream?method=save"/>-->
                    <!--<camel:to uri="bean:messagePersistFollowersMessages?method=save"/>-->
                    <!--<camel:to uri="bean:messagePersistFriendsMessages?method=save"/>-->
                </camel:multicast>
            </camel:pipeline>
        </camel:route>
    </camel:camelContext>

    <bean id="textMessagePublishBus" class="org.yestech.lib.camel.TerracottaComponent"/>

    <bean id="camelConsumerTextMessagePublish" class="org.yestech.publish.service.CamelXmlPublishConsumer"
          p:processor-ref="defaultTextMessagePublishProcessor" p:tempDirectory-ref="localPublishConsumerTempDir"/>

    <bean id="textMessagePublisher" class="com.blackbox.server.message.publisher.MessagePublisher"
            />

    <bean id="defaultTextMessagePublishProcessor" class="org.yestech.publish.service.DefaultPublishProcessor">
        <property name="processorList">
            <util:list>
                <ref bean="textMessagePublisher"/>
            </util:list>
        </property>
    </bean>

    <bean id="messagePersistSenderMessageToDatabase" class="com.blackbox.server.message.publisher.SaveSenderMessageToDatabase"/>
    <bean id="messagePersistSenderMessageToActivityStream" class="com.blackbox.server.message.publisher.SaveSenderMessageToActivityStream"/>
    <bean id="messagePersistSenderLastActivityMessage" class="com.blackbox.server.message.publisher.SaveSenderLastActivityMessage"/>
    <bean id="messagePersistFollowersMessages" class="com.blackbox.server.message.publisher.SaveFollowersMessagesToActivityStreams"/>
    <bean id="messagePersistFriendsMessages" class="com.blackbox.server.message.publisher.SaveFriendsMessagesToActivityStreams"/>
    <bean id="publishMessageToTwitter" class="com.blackbox.server.message.publisher.PublishMessageToTwitter" />

    <bean id="textMessageMemberNotification" class="com.blackbox.server.notification.MessageMemberNotification"
          p:sender-ref="asciiMessageNotificationSender" p:subject="${message.publish.subject}"
          p:notificationBridge-ref="messageNotificationBridge"
          p:presentationUrl="${presentation.url}"
          p:templateLanguage-ref="asciiMessagePublishVelocityTemplateLanguage"/>

</beans>
